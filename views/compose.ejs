<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Tez | Compose</title>
    <link rel="shortcut icon" type="image/png" href="/platform/assets/images/logos/favicon.png" />
    <link rel="stylesheet" href="styles.css" />
    <link rel="stylesheet" href="dataTables.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link href="https://fonts.gstatic.com" rel="preconnect" />
    <link
        href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
        rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.ckeditor.com/ckeditor5/43.1.0/ckeditor5.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <!-- <script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script> -->
    <script type="importmap">
        {
            "imports": {
                "ckeditor5": "https://cdn.ckeditor.com/ckeditor5/43.1.0/ckeditor5.js",
                "ckeditor5/": "https://cdn.ckeditor.com/ckeditor5/43.1.0/"
            }
        }
    </script>
    <!-- <script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/balloon-classic/ckeditor.js"></script> -->

</head>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin-bottom: 20px;
        }

        .ck-editor__editable_inline {
            padding: 20px;
            /* Add padding inside the editor */
            min-height: 200px;
            /* Optional: Set minimum height */
            box-sizing: border-box;
            /* Ensure padding doesn't affect width */
        }

        /* Adjust padding or margin for unordered and ordered lists */
        .ck-content ul,
        .ck-content ol {
            padding-left: 30px;
            /* Increase this value as needed */
            margin-left: 0px;
            /* Ensure margin doesn't push the bullets too far */
        }

        /* You can also adjust list item styling */
        .ck-content li {
            margin-left: 0px;
            padding-left: 5px;
            /* Fine-tune spacing for the list items */
        }
    </style>

    <body>
        <%-include("./partials/navbar.ejs")%>

            <!--  Body Wrapper -->
            <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6"
                data-sidebartype="full" data-sidebar-position="fixed" data-header-position="fixed">
                    <!--  Main wrapper -->
                    <div class="body-wrapper">
                            <div class="container-fluid" style="padding-top: 20px;">
                                <div class="container">
                                    <div class="row" id="myItems">
                                        <div class="col-sm-12 mb-3">
                                            <h1>Tez Mail</h1><br />
                                            <!-- <p>
                                                SG Compose is a streamlined email management platform designed for
                                                Student Government, allowing students to submit requests that can be
                                                quickly approved and automatically sent to targeted groups. The system
                                                includes rich text editing, alias-based organization, and options for
                                                directing emails to specific audiences within Ashoka University.
                                            </p> -->
                                            <!-- HTML Form -->
                                            <form id="myForm" method="POST" enctype="multipart/form-data">
                                                <!-- <label for="select" class="form-label">Select Your Category of Mail<span
                                                        style="color:rgb(177, 58, 58)">*</span></label>
                                                <select required name="alias" id="alias" class="form-select">
                                                    <option disabled selected value="">Select</option>
                                                    <option value="Inductions">Inductions</option>
                                                    <option value="Lost and Found">Lost and Found</option>
                                                    <option value="Jobs and Internships">Jobs and Internships</option>
                                                    <option value="Surveys">Surveys</option>
                                                    <option value="Campaigns">Campaigns</option>
                                                    <option value="Fundraisers">Fundraisers</option>
                                                    <option value="Events and Invitations">Events and Invitations
                                                    </option>
                                                    <option value="Promotions">Promotions</option>
                                                </select>
                                                <br /> -->
                                                <label for="email" class="form-label">Reply-To Email Id<span
                                                        style="color:rgb(177, 58, 58)">*</span></label>
                                                <input required name="email" type="email" class="form-control"
                                                    id="email">
                                                <br />
                                                <label for="subject" class="form-label">Subject (of mail)<span
                                                        style="color:rgb(177, 58, 58)">*</span></label>
                                                <input required name="subject" type="title" class="form-control"
                                                    id="subject">
                                                <br />
                                                <label for="editor" class="form-label">Mail Draft <span
                                                        style="color:rgb(177, 58, 58)">*</span></label>
                                                <!-- Textarea that will be replaced by CKEditor -->
                                                <textarea style="margin-top:60px;padding:30px;" id="editor"
                                                    name="mail_body"></textarea>
                                                <p style="font-size:14px;">PLEASE NOTE: The mail that you send out will
                                                    have you in CC.</p>
                                                <br />
                                                <label for="files" class="form-label">File Attachments (if
                                                    any -- MAX 10MB TOTAL)</span></label>
                                                <input style="background:white" multiple name="files" type="file"
                                                    class="form-control" id="file">
                                                <br />
                                                <button class="btn btn-primary" type="submit" id="requestEmailBtn">
                                                    <span id="requestEmailText">Request Email</span>
                                                    <div class="d-flex justify-content-center">
                                                        <div id="requestEmailSpinner"
                                                            style="height:20px;width:20px;display:none"
                                                            class="spinner-border" role="status">
                                                            <span class="sr-only">Loading...</span>
                                                        </div>
                                                </button>
                                                <button id="cancelButton" class="btn btn-danger" type="button"
                                                    onclick="clearEditor();">Cancel Mail</button>
                                            </form>
                                            <script>
                                                document.getElementById("myForm").addEventListener("submit", async function (event) {
                                                    event.preventDefault(); // Prevent form submission for validation
                                              
                                                    var fileInput = document.getElementById('file');
                                                    var files = fileInput.files;
                                                    var fileSizeSum = 0
                                                    for(var i=0;i<files.length;i++){
                                                        fileSizeSum += files[i].size
                                                    }
                                                    var maxSize = 10 * 1024 * 1024; // 10MB in bytes 
                                                    // Check file size
                                                    if (fileSizeSum > maxSize) {
                                                        alert('File size exceeds the 10MB limit.');
                                                        return;
                                                    }

                                                    // Disable the button and show/hide relevant elements
                                                    document.getElementById('requestEmailBtn').disabled = true;
                                                    document.getElementById('cancelButton').disabled = true;
                                                    document.getElementById('requestEmailBtn').disabled = true;
                                                    document.getElementById('requestEmailText').style.display = "none";
                                                    document.getElementById('requestEmailSpinner').style.display = "block";
                                                    
                                                    // setTimeout(() => {
                                                    //     alert("Hold tight while we send your request to the SG!")
                                                    // }, 2000);  // 2000 ms = 2 second

                                                    try {
                                                        const formData = new FormData(this);
                                                        formData.set('mailBody', editorInstance.getData()); // Get content from CKEditor

                                                        const response = await fetch('/compose', {
                                                            method: 'POST',
                                                            body: formData
                                                        });

                                                        const data = await response.json();
                                                        if (data.status === 200) {
                                                            alert('Email request has been submitted successfully!');
                                                            window.location.reload();
                                                        } else {                                                            
                                                            alert(data.error || 'Failed to send email request. Please try again.');
                                                        }
                                                    } catch (error) {
                                                        console.error('Error:', error);
                                                        alert('An error occurred while sending the email request. Please try again.');
                                                    } finally {
                                                        // Re-enable buttons and hide spinner
                                                        document.getElementById('requestEmailBtn').disabled = false;
                                                        document.getElementById('cancelButton').disabled = false;
                                                        document.getElementById('requestEmailText').style.display = "block";
                                                        document.getElementById('requestEmailSpinner').style.display = "none";
                                                    }
                                                });
                                            </script>
                                            <script>
                                                // Replace the <textarea> with a CKEditor instance and add plugins
                                                let editorInstance;
                                                function clearEditor() {
                                                    document.getElementById('myForm').reset();
                                                    if (editorInstance) {
                                                        editorInstance.setData('');  // Clear the editor content
                                                    } else {
                                                        console.error("Editor instance not available");
                                                    }

                                                    // Reset other form fields if necessary
                                                    document.getElementById('myForm').reset();
                                                }
                                            </script>
                                            <script type="module">
                                                import {
                                                    ClassicEditor,
                                                    Essentials,
                                                    Paragraph,
                                                    Bold,
                                                    Italic,
                                                    Font,
                                                    Heading,
                                                    Alignment,
                                                    List,
                                                    Indent,
                                                    Link,
                                                    Table,
                                                    CodeBlock,
                                                    BlockQuote,
                                                    FindAndReplace,
                                                    FontBackgroundColor,
                                                    FontColor,
                                                    PageBreak,
                                                    SpecialCharacters,
                                                    Undo,
                                                } from 'ckeditor5';

                                                ClassicEditor
                                                    .create(document.querySelector('#editor'), {
                                                        plugins: [
                                                            Essentials, Paragraph, Bold, Italic, Font, Heading, Alignment, List, Indent,
                                                            Link, Table, CodeBlock, BlockQuote, FindAndReplace,
                                                            FontBackgroundColor, FontColor, PageBreak,
                                                            SpecialCharacters, Undo
                                                        ],
                                                        toolbar: {
                                                            shouldNotGroupWhenFull: true,
                                                            items: [
                                                                // Document-wide tools
                                                                'undo', 'redo', '|', 'importWord', '|', 'findAndReplace', 'selectAll', '|',
                                                                'insertTemplate', 'tableOfContents', '|',

                                                                // Insertables
                                                                'link', 'insertTable', 'blockQuote',
                                                                'horizontalLine', '|',

                                                                // Block-level formatting
                                                                'heading', 'style', '|',

                                                                // Basic styles, font and inline formatting
                                                                'bold', 'italic', 'underline', 'strikethrough', '|',
                                                                'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor',
                                                                'highlight', 'superscript', 'subscript', 'code', '|',
                                                                'removeFormat', '|',

                                                                // Text alignment
                                                                'alignment', '|',

                                                                // Lists and indentation
                                                                'bulletedList', 'numberedList', 'multilevelList', 'todoList', '|'
                                                            ]
                                                        },
                                                        fontFamily: {
                                                            supportAllValues: true,
                                                        },
                                                        fontSize: {
                                                            options: [10, 12, 14, 'default', 18, 20, 22],
                                                            supportAllValues: true,
                                                        },
                                                        fontColor: {
                                                            columns: 12,
                                                            colors: [
                                                                { color: 'hsl(0, 0%, 0%)', label: 'Black' },
                                                                { color: 'hsl(0, 75%, 60%)', label: 'Red' },
                                                                // Add more colors as needed
                                                            ],
                                                        },
                                                        fontBackgroundColor: {
                                                            columns: 12,
                                                            colors: [
                                                                { color: 'hsl(0, 0%, 100%)', label: 'White' },
                                                                { color: 'hsl(0, 75%, 60%)', label: 'Red' },
                                                                // Add more background colors as needed
                                                            ],
                                                        },
                                                        list: {
                                                            properties: {
                                                                styles: true,
                                                                startIndex: true,
                                                                reversed: true,
                                                            },
                                                        },
                                                        link: {
                                                            decorators: {
                                                                toggleDownloadable: {
                                                                    mode: 'manual',
                                                                    label: 'Downloadable',
                                                                    attributes: {
                                                                        download: 'file',
                                                                    },
                                                                },
                                                            },
                                                            addTargetToExternalLinks: true,
                                                            defaultProtocol: 'https://',
                                                        },
                                                        heading: {
                                                            options: [
                                                                { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                                                                { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                                                                { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                                                                { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
                                                                { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
                                                                { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },
                                                                { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' },
                                                            ],
                                                        },
                                                        alignment: {
                                                            options: ['left', 'center', 'right', 'justify']
                                                        },
                                                        table: {
                                                            contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']
                                                        },
                                                        // Disable sticky toolbar
                                                        ui: {
                                                            viewportOffset: {
                                                                top: 70,  // Adjust this value as needed
                                                            }
                                                        },
                                                        language: 'en',
                                                    })
                                                    .then(editor => {

                                                        // Add custom padding to the editable content area
                                                        editor.ui.view.editable.element.style.padding = '20px'; // Adjust padding as needed
                                                        // window.editor = editor; // Store the editor instance globally
                                                        editorInstance = editor; // Store the editor instance globally

                                                    })
                                                    .catch(error => {
                                                        console.error(error);
                                                    });
                                            </script>

                                        </div>
                                    </div>
                                </div>
                            </div>
                    </div>
                    <script src="bootstrap.bundle.min.js"></script>
                    <script src="dataTables.js"></script>
                    <script src="app.min.js"></script>
                    <script src="apexcharts.min.js"></script>
                    <script src="simplebar.js"></script>
                    <script src="dashboard.js"></script>
    </body>

</html>